// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: proto/PostUserAuth.proto

package PostUserAuth

import (
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "go-micro.dev/v4/api"
	client "go-micro.dev/v4/client"
	server "go-micro.dev/v4/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for PostUserAuth service

func NewPostUserAuthEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for PostUserAuth service

type PostUserAuthService interface {
	PostUserAuth(ctx context.Context, in *PostUserAuthRequest, opts ...client.CallOption) (*PostUserAuthResponse, error)
}

type postUserAuthService struct {
	c    client.Client
	name string
}

func NewPostUserAuthService(name string, c client.Client) PostUserAuthService {
	return &postUserAuthService{
		c:    c,
		name: name,
	}
}

func (c *postUserAuthService) PostUserAuth(ctx context.Context, in *PostUserAuthRequest, opts ...client.CallOption) (*PostUserAuthResponse, error) {
	req := c.c.NewRequest(c.name, "PostUserAuth.PostUserAuth", in)
	out := new(PostUserAuthResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PostUserAuth service

type PostUserAuthHandler interface {
	PostUserAuth(context.Context, *PostUserAuthRequest, *PostUserAuthResponse) error
}

func RegisterPostUserAuthHandler(s server.Server, hdlr PostUserAuthHandler, opts ...server.HandlerOption) error {
	type postUserAuth interface {
		PostUserAuth(ctx context.Context, in *PostUserAuthRequest, out *PostUserAuthResponse) error
	}
	type PostUserAuth struct {
		postUserAuth
	}
	h := &postUserAuthHandler{hdlr}
	return s.Handle(s.NewHandler(&PostUserAuth{h}, opts...))
}

type postUserAuthHandler struct {
	PostUserAuthHandler
}

func (h *postUserAuthHandler) PostUserAuth(ctx context.Context, in *PostUserAuthRequest, out *PostUserAuthResponse) error {
	return h.PostUserAuthHandler.PostUserAuth(ctx, in, out)
}
