// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: proto/PostAvatar.proto

package PostAvatar

import (
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "go-micro.dev/v4/api"
	client "go-micro.dev/v4/client"
	server "go-micro.dev/v4/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for PostAvatar service

func NewPostAvatarEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for PostAvatar service

type PostAvatarService interface {
	PostAvatar(ctx context.Context, in *PostAvatarRequest, opts ...client.CallOption) (*PostAvatarResponse, error)
}

type postAvatarService struct {
	c    client.Client
	name string
}

func NewPostAvatarService(name string, c client.Client) PostAvatarService {
	return &postAvatarService{
		c:    c,
		name: name,
	}
}

func (c *postAvatarService) PostAvatar(ctx context.Context, in *PostAvatarRequest, opts ...client.CallOption) (*PostAvatarResponse, error) {
	req := c.c.NewRequest(c.name, "PostAvatar.PostAvatar", in)
	out := new(PostAvatarResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PostAvatar service

type PostAvatarHandler interface {
	PostAvatar(context.Context, *PostAvatarRequest, *PostAvatarResponse) error
}

func RegisterPostAvatarHandler(s server.Server, hdlr PostAvatarHandler, opts ...server.HandlerOption) error {
	type postAvatar interface {
		PostAvatar(ctx context.Context, in *PostAvatarRequest, out *PostAvatarResponse) error
	}
	type PostAvatar struct {
		postAvatar
	}
	h := &postAvatarHandler{hdlr}
	return s.Handle(s.NewHandler(&PostAvatar{h}, opts...))
}

type postAvatarHandler struct {
	PostAvatarHandler
}

func (h *postAvatarHandler) PostAvatar(ctx context.Context, in *PostAvatarRequest, out *PostAvatarResponse) error {
	return h.PostAvatarHandler.PostAvatar(ctx, in, out)
}
